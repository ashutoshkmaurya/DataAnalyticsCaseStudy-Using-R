###Case Study : How do annual members and casual riders use Cyclistic bikes differently?

#This analysis is done on data provided by Motivate International Inc. under the license https://www.divvybikes.com/data-license-agreement , its a public data , there is PII in these datasets. Below script cosolidates cyclistic data into a single data frame followed by analysis to answer questions.
Question : How do annual members and casual riders use Cyclistic bikes differently?

#package installation
#tidyverse : data import and wrangling
#lubridate : data functions
#ggplot : Visualization
# # # # # # # # # # # # # # # # # # # # # # #

library(tidyverse)  #helps wrangle data
library(lubridate)  #helps wrangle date attributes
library(ggplot2)  #helps visualize data

getwd() #to find current working directory
setwd("/Users/Ashutosh/Desktop/Divvy_Exercise/csv") #for setting current working directory where data sets are placed

#-------1- "Data Collection" : Import data (.csv file) in MSSQL Server --------

# Upload Divvy datasets (csv files) using below code :

q2_2019 <- read_csv("Divvy_Trips_2019_Q2.csv")
q3_2019 <- read_csv("Divvy_Trips_2019_Q3.csv")
q4_2019 <- read_csv("Divvy_Trips_2019_Q4.csv")
q1_2020 <- read_csv("Divvy_Trips_2020_Q1.csv")	

#---------------------------------------------------------------------------

#------2-"Combine Data in single table"--------------------------------------
	#a) - First rename columns so that its consistant in all tables. Keep column names of Q1_2022 in all tables.

(q4_2019 <- rename(q4_2019
                   ,ride_id = trip_id
                   ,rideable_type = bikeid 
                   ,started_at = start_time  
                   ,ended_at = end_time  
                   ,start_station_name = from_station_name 
                   ,start_station_id = from_station_id 
                   ,end_station_name = to_station_name 
                   ,end_station_id = to_station_id 
                   ,member_casual = usertype))

(q3_2019 <- rename(q3_2019
                   ,ride_id = trip_id
                   ,rideable_type = bikeid 
                   ,started_at = start_time  
                   ,ended_at = end_time  
                   ,start_station_name = from_station_name 
                   ,start_station_id = from_station_id 
                   ,end_station_name = to_station_name 
                   ,end_station_id = to_station_id 
                   ,member_casual = usertype))

(q2_2019 <- rename(q2_2019
                   ,ride_id = "01 - Rental Details Rental ID"
                   ,rideable_type = "01 - Rental Details Bike ID" 
                   ,started_at = "01 - Rental Details Local Start Time"  
                   ,ended_at = "01 - Rental Details Local End Time"  
                   ,start_station_name = "03 - Rental Start Station Name" 
                   ,start_station_id = "03 - Rental Start Station ID"
                   ,end_station_name = "02 - Rental End Station Name" 
                   ,end_station_id = "02 - Rental End Station ID"
                   ,member_casual = "User Type"))
	
	#b). Convert ride_id and rideable_type to character data type

q4_2019 <-  mutate(q4_2019, ride_id = as.character(ride_id)
                   ,rideable_type = as.character(rideable_type)) 
q3_2019 <-  mutate(q3_2019, ride_id = as.character(ride_id)
                   ,rideable_type = as.character(rideable_type)) 
q2_2019 <-  mutate(q2_2019, ride_id = as.character(ride_id)
                   ,rideable_type = as.character(rideable_type)) 

	#c). combine all data frames into one big data frame.
all_trips <- bind_rows(q2_2019, q3_2019, q4_2019, q1_2020)

	#d). remove columns not required in all tables
all_trips <- all_trips %>%  
  select(-c(start_lat, start_lng, end_lat, end_lng, birthyear, gender, "01 - Rental Details Duration In Seconds Uncapped", "05 - Member Details Member Birthday Year", "Member Gender", "tripduration"))

#------------------------------------------------------------------------

#------------- 3- Data Cleaning and add new columns ---------------------

# created data frame needs to be inspected
colnames(all_trips)  #List of column names
nrow(all_trips)  #How many rows are in data frame?
dim(all_trips)  #Dimensions of the data frame?
head(all_trips)  #See the first 6 rows of data frame.  Also tail(all_trips)
str(all_trips)  #See list of columns and data types (numeric, character, etc)
summary(all_trips)  #Statistical summary of data. Mainly for numerics


#Data needs to be fixed 
# 1. member_casual column has4 types of values "member","Subscriber","Customer","casual". here only 2 values are required that is "Member" and "casuals". need to change "Subcriber" to "member" and "customer" to "casual" 

#2. some additional columns are required day, month, year
#3. 2020Q1 is not having trip duration column. so adding ride_length to the entire dataframe.
#4. for some rides trip duration is negative . those records will be deleted .


# Reassigning desired values (current 2020 labels are used)
all_trips <-  all_trips %>% 
  mutate(member_casual = recode(member_casual
                           ,"Subscriber" = "member"
                           ,"Customer" = "casual"))


# Add columns that list the date, month, day, and year of each ride
all_trips$date <- as.Date(all_trips$started_at) #The default format is yyyy-mm-dd
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%Y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")

# Addition of ride length column
all_trips$ride_length <- difftime(all_trips$ended_at,all_trips$started_at)

# deleting negative values
all_trips_v2 <- all_trips[!(all_trips$start_station_name == "HQ QR" | all_trips$ride_length<0),]

# -------------------------------------------------------------------

# 4- DESCRIPTIVE ANALYSIS

# mean of ride length 
mean(all_trips_v2$ride_length)

# max of ride length
max(all_trips_v2$ride_length)

# min of ride length
min(all_trips_v2$ride_length)

#median
median(all_trips_v2$ride_length)

# check summary 
summary(all_trips_v2$ride_length)


# lets compare members and casual riders data
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = mean)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = median)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = max)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = min)

#check average ride time by each day for members vs casual users
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)

# order by days of week
all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))

# check again average ride time by each day for members vs casual users
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)

# analyze ridership data by type and weekday
all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>%  #creates weekday field using wday()
  group_by(member_casual, weekday) %>%  		#groups by usertype and weekday
  summarise(number_of_rides = n()			#calculates the number of rides and average duration 
  ,average_duration = mean(ride_length)) %>% 		# calculates the average duration
  arrange(member_casual, weekday)			# sorts

# Visualization 

# number of rides by rider type

all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
  ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge")

# by average duration

all_trips_v2 %>% 
  mutate(weekday = wday(started_at, label = TRUE)) %>% 
  group_by(member_casual, weekday) %>% 
  summarise(number_of_rides = n()
            ,average_duration = mean(ride_length)) %>% 
  arrange(member_casual, weekday)  %>% 
  ggplot(aes(x = weekday, y = average_duration, fill = member_casual)) +
  geom_col(position = "dodge")




#---------------------------------------------------------------------------

#5- Summary of Analysis
	#a). Complete analysis includes running various queries to perform calculations to calculate mean, median, max and min of rides .
	#b). The trend i can see is there are less casual riders but they drive for long but not frequently whereas member riders are more in number and they ride frequently but for less duration.
	#c). final table is prepared for sharing visualization

#-------------------------------------------------------------------------------

#6- Share vizualization and Key Findings:
	#a).complete visualization is done in R 

	#b). Key findings :  Annual Members who are 3 times in number compared to 	Casual riders use frequently for short duration whereas Casual use for long duration but not frequently.

#--------------------------------------------------------------------------------


#7- ACT : 
	#Top three recommendations based on analysis

	#Convert Casual riders to Annual rider : Come up with a membership plan to 	attract casual members, which is profitable for Cyclistic as well.

	#Target new customers : Members are those who ride less duration , less 	distance but frequently or on daily basis . so, we can connect win new 	audience who ride less duration but frequently like office goers and try to 	make them members.

	# We can target casual members with a campaign and attractive membership plans 	in the month of July , Aug, Sept that is 3rd Quarter
